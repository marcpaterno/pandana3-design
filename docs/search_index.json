[["index.html", "PandAna 3 Design Preface", " PandAna 3 Design Marc Paterno 2021-09-01 Preface This design document is current a work in progress. The design of PandAna 3 is not yet complete; in fact, it is far from complete. It will be continually updated as our understanding of what is needed by the experimenters is needed. This work is being done as part of the SciDAC project HEP analytics on HPC. "],["what-pandana-is-for-and-why-we-are-designing-pandana-3.html", "Chapter 1 What PandAna is for, and why we are designing PandAna 3", " Chapter 1 What PandAna is for, and why we are designing PandAna 3 Starting from PandAna 2, the project goals have been the development of an easy-to-use environment for fast and scalable analysis. We achieve ease-of-use by the use of Python and Python data science tools (numpy and pandas). PandAna 2 has support for parallel processing of data using MPI. It does this in a manner that lets users almost entirely ignore any issues regarding MPI. This is primarily done by arranging the reading of the HDF5 files to assure that data from a single event is never split across MPI ranks. Because an analysis can treat event independently, this means user code never needs to communicate between MPI ranks. The result is that the same code that works in a serial program will also work in a parallel program. This program organization yields excellent (very nearly perfect) scaling properties for the in-memory processing portion of an analysis. However, the reading performance becomes a limiting factor for relatively small MPI programs—those using a few hundred MPI ranks. This is because good performance is obtained from the HDF5 reading only when the size of each dataset read by each rank is large. The goal of PandAna 3 is to further the abilities of PandAna 2, to include automated MPI parallelism and high-performance IO (especially reading) of large data samples. Furthermore, we are looking to redesign the internals of PandAna to allow the automatic optimization of workflows by scheduling both reading of data and evaluation of calculations in the most efficient fashion. Our plans for re-design include introducing something like an abstract syntax tree (AST) to describe the “calcluation” done in an analysis. The calculation in question is the creation of a table of data (in HEP, often called an ntuple) to be used tasks such as the creation of histograms or other plots, the calculation of summary statistics, and for fitting. We are introducing an AST to provide the opportunity to apply optimizations of the calculation before evaluation of the calculated result; the formal separation of the creation of the AST from its evaluation. "],["basic-elements.html", "Chapter 2 Basic elements 2.1 Vars 2.2 Cuts 2.3 Filtering 2.4 Indexing 2.5 Grouping 2.6 Other things that are interesting", " Chapter 2 Basic elements In PandAna, the basic calculational elements are Cuts and Vars. A Var represents data; a Cut represents selections done on the data. 2.1 Vars The central feature of an “analysis”, as we represent it, is the evaluation of one or more Vars. A Var represents data that are either read directly from an input file or calculated by the analysis program, typically from other data read from the input file. From these Vars we can make histograms, scatterplots, statistical summaries, etc. A Var evaluates to a table, in our implementation a pandas.DataFrame (henceforth, just DataFrame). The evaluation of a Var requires the specification of a file to be used as the source of data for that Var. We have identified several types of Vars. SimpleVar: A SimpleVar is responsible only for reading data from a file. It performs no operations on those data. MutatedVar: A MutatedVar is based upon some other Var, and also contains a function that transforms the DataFrame to which that Var evaluate in order to yield the value of the MutatedVar. GroupedVar: 2.1.1 FilteredVar 2.1.2 ArithmeticVar 2.2 Cuts A Cut: evaluates to an array of booleans (either an np.ndarray or a DataFrame with one boolean column). gets applied to Vars to select the rows that “pass the cut”. We have identified only a few types of Cuts. 2.3 Filtering 2.4 Indexing 2.5 Grouping 2.6 Other things that are interesting "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
